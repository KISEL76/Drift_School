services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: school-api
    ports:
      - "${GO_PORT}:8080"
    environment:
      - GO_PORT=${GO_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_HOST=db
    depends_on:
      - db
    restart: always
    networks:
      - schoolnet

  db:
    image: postgres:15
    container_name: school-db
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: always
    networks:
      - schoolnet

  pgadmin:
    image: dpage/pgadmin4
    container_name: school-pgadmin
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - db
    networks:
      - schoolnet
    
  bot:
    build:
      context: ./bot
      dockerfile: Dockerfile
    container_name: school-bot
    environment:
      - TELEGRAM_TOKEN=${TELEGRAM_TOKEN}
      - POSTGRES_HOST=db
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    restart: always
    depends_on:
      - db
    networks:
      - schoolnet    

volumes:
  db_data:
  pgadmin_data:

networks:
  schoolnet:
